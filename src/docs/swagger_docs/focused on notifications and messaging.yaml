openapi: 3.0.0
info:
  title: "Voting System API - Additional Functionality"
  description: "API documentation for notifications, voting, and messaging"
  version: "1.0.0"

paths:
  /api/notifications:
    get:
      tags:
        - Notifications
      summary: Get user notifications
      security:
        - BearerAuth: []
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: page_size
          in: query
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: List of notifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNotificationResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

    post:
      tags:
        - Notifications
      summary: Create notification
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationCreate'
      responses:
        '201':
          description: Notification created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /api/notifications/{id}/read:
    put:
      tags:
        - Notifications
      summary: Mark notification as read
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Notification marked as read
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'


  /api/chat:
    post:
      tags:
        - Chat
      summary: Create new chat
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatCreate'
      responses:
        '201':
          description: Chat created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /api/chat/message:
    post:
      tags:
        - Chat
      summary: Send message
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageCreate'
      responses:
        '201':
          description: Message sent successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /api/chat/{chat_id}/messages:
    get:
      tags:
        - Chat
      summary: Get chat messages
      security:
        - BearerAuth: []
      parameters:
        - name: chat_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: List of messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageListResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

components:
  schemas:
    NotificationCreate:
      type: object
      required:
        - type
        - message
      properties:
        type:
          type: string
          example: "questionnaire_invitation"
        message:
          type: string
          example: "You have been invited to participate in a survey"



    ChatCreate:
      type: object
      required:
        - questionnaire_id
      properties:
        questionnaire_id:
          type: integer
          example: 1

    MessageCreate:
      type: object
      required:
        - chat_id
        - content
      properties:
        chat_id:
          type: integer
          example: 1
        content:
          type: string
          example: "Hello, how are you?"
        attachment_url:
          type: string
          format: uri
          example: "https://example.com/files/attachment.pdf"

    NotificationResponse:
      type: object
      properties:
        status:
          type: string
          example: "success"
        data:
          type: object
          properties:
            id:
              type: integer
            type:
              type: string
            message:
              type: string
            is_read:
              type: boolean
            created_at:
              type: string
              format: date-time

    PaginatedNotificationResponse:
      type: object
      properties:
        status:
          type: string
          example: "success"
        data:
          type: array
          items:
            $ref: '#/components/schemas/NotificationResponse'
        pagination:
          $ref: '#/components/schemas/Pagination'

    ChatResponse:
      type: object
      properties:
        status:
          type: string
          example: "success"
        data:
          type: object
          properties:
            id:
              type: integer
            questionnaire_id:
              type: integer
            type:
              type: string
              enum: [private, group]
            status:
              type: string
              enum: [active, inactive]
            created_at:
              type: string
              format: date-time

    MessageResponse:
      type: object
      properties:
        status:
          type: string
          example: "success"
        data:
          type: object
          properties:
            id:
              type: integer
            chat_id:
              type: integer
            user_id:
              type: integer
            content:
              type: string
            attachment_url:
              type: string
            created_at:
              type: string
              format: date-time

    MessageListResponse:
      type: object
      properties:
        status:
          type: string
          example: "success"
        data:
          type: array
          items:
            $ref: '#/components/schemas/MessageResponse'

    Pagination:
      type: object
      properties:
        page:
          type: integer
          example: 1
        page_size:
          type: integer
          example: 10
        total:
          type: integer
          example: 100
        total_pages:
          type: integer
          example: 10

    SuccessResponse:
      type: object
      properties:
        status:
          type: string
          example: "success"
        message:
          type: string
          example: "Operation completed successfully"

  responses:
    UnauthorizedError:
      description: Access token is missing or invalid
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: "error"
              message:
                type: string
                example: "Unauthorized access"

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - BearerAuth: []